% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vgi_insights_price_history.R
\name{vgi_insights_price_history}
\alias{vgi_insights_price_history}
\title{Get Price History Data for a Game}
\usage{
vgi_insights_price_history(
  steam_app_id,
  currency = NULL,
  auth_token = Sys.getenv("VGI_AUTH_TOKEN"),
  headers = list()
)
}
\arguments{
\item{steam_app_id}{Integer. The Steam App ID of the game.}

\item{currency}{Character. Optional. Currency code (e.g., "USD", "EUR", "GBP").
If not specified, returns price history for all currencies.}

\item{auth_token}{Character string. Your VGI API authentication token.
Defaults to the VGI_AUTH_TOKEN environment variable.}

\item{headers}{List. Optional custom headers to include in the API request.}
}
\value{
If currency is specified, returns a list containing:
\describe{
\item{steamAppId}{Integer. The Steam App ID}
\item{currency}{Character. The currency code}
\item{priceChanges}{Data frame with columns:
\itemize{
\item priceInitial: Full price without discount
\item priceFinal: Price that the game is sold at
\item firstDate: First date when this price was recorded
\item lastDate: Last date when this price was active (NULL if current)
}
}
}

If currency is not specified, returns a list containing:
\describe{
\item{steamAppId}{Integer. The Steam App ID}
\item{price}{List of price histories for each currency}
}
}
\description{
Retrieve historical pricing data for a specific game across different currencies.
}
\examples{
\dontrun{
# Get price history for a game in USD
usd_history <- vgi_insights_price_history(
  steam_app_id = 730,
  currency = "USD"
)

# Calculate discount percentage for each price period
if (nrow(usd_history$priceChanges) > 0) {
  usd_history$priceChanges$discount_pct <- 
    round((1 - usd_history$priceChanges$priceFinal / 
           usd_history$priceChanges$priceInitial) * 100, 1)
}

# Get price history for all currencies
all_prices <- vgi_insights_price_history(steam_app_id = 730)

# Find all currencies where the game is available
currencies <- sapply(all_prices$price, function(x) x$currency)
print(paste("Available in", length(currencies), "currencies"))

# Identify sales periods (where priceFinal < priceInitial)
sales <- usd_history$priceChanges[
  usd_history$priceChanges$priceFinal < usd_history$priceChanges$priceInitial, 
]
print(paste("Number of sale periods:", nrow(sales)))
}
}
